@model OnDemandService.Models.Order

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>
<hr/>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            Category
            <div class="col-md-3">
                @Html.EditorFor(model => model.SubCategoryId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Order Date
            <div class="col-md-3">
                @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Order Time
            <div class="col-md-3">
                @Html.EditorFor(model => model.OrderTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Customer
            <div class="col-md-3">
                @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            @Html.LabelFor(model => model.IsStarted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsStarted)
                    @Html.ValidationMessageFor(model => model.IsStarted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsDelivered, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDelivered)
                    @Html.ValidationMessageFor(model => model.IsDelivered, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPaymentDone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsPaymentDone)
                    @Html.ValidationMessageFor(model => model.IsPaymentDone, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IsCancelled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCancelled)
                    @Html.ValidationMessageFor(model => model.IsCancelled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsGoingOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsGoingOn)
                    @Html.ValidationMessageFor(model => model.IsGoingOn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
