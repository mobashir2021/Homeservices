@model OnDemandService.Models.UserViewModel
@{
    ViewBag.Title = "Register Professional";
    Layout = "~/Areas/Professional/Views/Shared/_LayoutAdminLogin.cshtml";
}



<div class="register-box" style="margin-top:-60px;">
    <div class="register-logo">
        <a href="#"><b>Register</b></a>
    </div>
    @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
    {
        if (ViewBag.Message != null)
        {
            <div class="alert alert-success">
                <strong>Success!</strong> @ViewBag.Message
            </div>
        }
    }
    else
    {
<div class="register-box-body" style="margin-top:-15px;">
    <p class="login-box-msg">Register a new membership</p>
    @using (Html.BeginForm())
    {
        <div class="form-group has-feedback">
            @*<input type="text" class="form-control" placeholder="Full name">*@
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Full Name" } })
            <span class="glyphicon glyphicon-user form-control-feedback"></span>
        </div>
        <div class="form-group has-feedback">
            @*<input type="email" class="form-control" placeholder="Email">*@
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
            <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
        </div>

        <div class="form-group has-feedback">
            @*<input type="email" class="form-control" placeholder="Email">*@
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
            <span class="glyphicon glyphicon-pencil form-control-feedback"></span>
        </div>
        <div class="form-group has-feedback">
            @*<input type="email" class="form-control" placeholder="Email">*@
            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", placeholder = "MobileNo" } })
            <span class="glyphicon glyphicon-phone form-control-feedback"></span>
        </div>
        <div class="form-group has-feedback">
            @*<input type="password" class="form-control" placeholder="Password">*@
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
            <span class="glyphicon glyphicon-lock form-control-feedback"></span>
        </div>
        <div class="form-group has-feedback">
            @*<input type="password" class="form-control" placeholder="Retype password">*@
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password" } })
            <span class="glyphicon glyphicon-log-in form-control-feedback"></span>
        </div>
        @*<div class="form-group has-feedback">

                @Html.DropDownList("Pincodes", null, htmlAttributes: new { Name = "Pincodes", @class = "form-control" })
                <span class="glyphicon glyphicon-home form-control-feedback"></span>
            </div>*@
        <div class="form-group has-feedback">
            @*<input type="password" class="form-control" placeholder="Retype password">*@
            @*@Html.DropDownList("Pincodes", null, htmlAttributes: new { Name = "Pincodes", @class = "form-control", @id = "pincodedropdown" })*@
            @*@Html.EditorFor(model => model.PincodeId, new { htmlAttributes = new { @class = "form-control", @id="pincodedropdown" } })*@
            <input type="text" class="form-control" id="pincodedropdown" name="Pincodes" placeholder="Enter Pincode" />
            <span class="glyphicon glyphicon-home form-control-feedback"></span>
        </div>
        @*<div class="form-group has-feedback">
                <input type="password" class="form-control" placeholder="Retype password">
                @Html.DropDownList("Service", null, htmlAttributes: new { Name = "Service", @class = "form-control" })
                <span class="glyphicon glyphicon-globe form-control-feedback"></span>
            </div>*@
        <div class="form-group has-feedback">

            @Html.Label("Choose Services", "Choose Services", htmlAttributes: new {  })
            <span class="glyphicon glyphicon-globe form-control-feedback"></span>
        </div>
        <div class="form-group has-feedback">
            @*<input type="password" class="form-control" placeholder="Retype password">*@
            @Html.ListBoxFor(m => m.ServiceIds, Model.ServiceModel, htmlAttributes: new { Name = "Services", @class = "form-control" })
            <span class="glyphicon glyphicon-globe form-control-feedback"></span>
        </div>
        <div class="row">
            <div class="col-xs-8">
                <div class="checkbox icheck">
                    <label>
                        <input type="checkbox"> I agree to the <a href="#">terms</a>
                    </label>
                </div>
            </div>
            <!-- /.col -->
            <div class="col-xs-4">
                <button type="submit" class="btn btn-primary btn-block btn-flat" id="registersubmit">Register</button>
            </div>
            <!-- /.col -->
        </div>
    }

    @if (ViewBag.Message != null)
    {
        <div class="alert alert-danger">
            <strong>Error!</strong> @ViewBag.Message
        </div>
    }

    @*<a href="login.html" class="text-center">I already have a membership</a>*@
    <br/><br/>
    @Html.ActionLink("I already have a membership", "LoginProfessional")<br />
    @Html.ActionLink("Go to Home Page", "GotoHomePage")

</div>
    }


    <!-- /.form-box -->
</div>
<!-- /.register-box -->
@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#registersubmit').click(function (e) {

                //alert($('#pincodedropdown').val());
                if ($('#pincodedropdown').val() == "" || $('#pincodedropdown').val().length < 6) {
                    alert("Kindly provide proper Pincode");
                    e.preventDefault();
                }
            });

            $("#pincodedropdown").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../../Professional/User/GetPincodes",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Pincode1, value: item.Pincode1 };
                        }))

                    }
                })
            },
            messages: {
                noResults: "",
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            }
        });
        });
    </script>
}


