@model OnDemandService.Models.UserViewModel
@{
    ViewBag.Title = "Register Professional";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdminLogin.cshtml";
}



    <div class="register-box" style="margin-top:-60px;">
        <div class="register-logo">
            <a href="#"><b>Register</b></a>
        </div>
        @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
        {
            if (ViewBag.Message != null)
            {
                <div class="alert alert-success">
                    <strong>Success!</strong> @ViewBag.Message
                </div>
            }
        }
        else
        {
    <div class="register-box-body" style="margin-top:-15px;">
        <p class="login-box-msg">Register a new membership</p>
        @using (Html.BeginForm())
        {
            <div class="form-group has-feedback">
                @*<input type="text" class="form-control" placeholder="Full name">*@
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Full Name" } })
                <span class="glyphicon glyphicon-user form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @*<input type="email" class="form-control" placeholder="Email">*@
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @*<input type="email" class="form-control" placeholder="Email">*@
                @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control", placeholder = "Username" } })
                <span class="glyphicon glyphicon-phone form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @*<input type="email" class="form-control" placeholder="Email">*@
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
                <span class="glyphicon glyphicon-pencil form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @*<input type="email" class="form-control" placeholder="Email">*@
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", placeholder = "MobileNo" } })
                <span class="glyphicon glyphicon-phone form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @*<input type="password" class="form-control" placeholder="Password">*@
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                <span class="glyphicon glyphicon-lock form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @*<input type="password" class="form-control" placeholder="Retype password">*@
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password" } })
                <span class="glyphicon glyphicon-log-in form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @*<input type="password" class="form-control" placeholder="Retype password">*@
                @Html.DropDownList("Pincodes", null, htmlAttributes: new { Name = "Pincodes", @class = "form-control" })
                <span class="glyphicon glyphicon-home form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @*<input type="password" class="form-control" placeholder="Retype password">*@
                @Html.DropDownList("Service", null, htmlAttributes: new { Name = "Service", @class = "form-control" })
                <span class="glyphicon glyphicon-globe form-control-feedback"></span>
            </div>
            <div class="row">
                <div class="col-xs-8">
                    <div class="checkbox icheck">
                        <label>
                            <input type="checkbox"> I agree to the <a href="#">terms</a>
                        </label>
                    </div>
                </div>
                <!-- /.col -->
                <div class="col-xs-4">
                    <button type="submit" class="btn btn-primary btn-block btn-flat">Register</button>
                </div>
                <!-- /.col -->
            </div>
        }



        <div class="social-auth-links text-center">
            <p>- OR -</p>
            <a href="#" class="btn btn-block btn-social btn-facebook btn-flat">
                <i class="fa fa-facebook"></i> Sign up using
                Facebook
            </a>
            <a href="#" class="btn btn-block btn-social btn-google btn-flat">
                <i class="fa fa-google-plus"></i> Sign up using
                Google+
            </a>
        </div>

        @if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong> @ViewBag.Message
            </div>
        }

        @*<a href="login.html" class="text-center">I already have a membership</a>*@

        @Html.ActionLink("I already have a membership", "LoginProfessional")

    </div>
        }


        <!-- /.form-box -->
    </div>
<!-- /.register-box -->
